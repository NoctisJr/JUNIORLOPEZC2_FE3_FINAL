{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Junior\\\\Documents\\\\DIGITAL HOUSE\\\\Front end 3 - C2\\\\EJERCICIOS\\\\fe3-final\\\\src\\\\Routes\\\\Detail.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react'; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Detail = () => {\n  _s();\n\n  // Consumiendo el parametro dinamico de la URL deberan hacer un fetch a un user en especifico\n  const {\n    id\n  } = useParams();\n  const [dentist, setDentist] = useState(null);\n  const [loading, setLoading] = useState(true); // Añade un estado para manejar la carga\n\n  const [error, setError] = useState(null); // Añade un estado para manejar errores\n\n  useEffect(() => {\n    const fetchDentist = async () => {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        setDentist(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDentist();\n  }, [id]);\n  console.log(id);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  if (!dentist) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No se encontr\\xF3 el dentista.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Detalle del Dentista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: dentist.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", dentist.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tel\\xE9fono: \", dentist.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Website: \", dentist.website]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Detail, \"PZoaL1HpFQpEUZO4EIUOS/V/2Pk=\", false, function () {\n  return [useParams];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useParams","useEffect","useState","Detail","id","dentist","setDentist","loading","setLoading","error","setError","fetchDentist","response","fetch","ok","Error","status","statusText","data","json","message","console","log","name","email","phone","website"],"sources":["C:/Users/Junior/Documents/DIGITAL HOUSE/Front end 3 - C2/EJERCICIOS/fe3-final/src/Routes/Detail.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Detail = () => {\r\n \r\n  // Consumiendo el parametro dinamico de la URL deberan hacer un fetch a un user en especifico\r\n\r\n \r\n\r\n  const { id } = useParams();\r\n  const [dentist, setDentist] = useState(null);\r\n  const [loading, setLoading] = useState(true); // Añade un estado para manejar la carga\r\n  const [error, setError] = useState(null); // Añade un estado para manejar errores\r\n\r\n  useEffect(() => {\r\n    const fetchDentist = async () => {\r\n      try {\r\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Error: ${response.status} ${response.statusText}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setDentist(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false); \r\n      }\r\n    };\r\n    \r\n    fetchDentist();\r\n  }, [id]); \r\n\r\n  console.log(id);\r\n\r\n  if (loading) return <p>Cargando...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n  if (!dentist) return <p>No se encontró el dentista.</p>;\r\n\r\n  return (\r\n    <div className='detail'>\r\n      <h1>Detalle del Dentista</h1>\r\n      <h2>{dentist.name}</h2>\r\n      <p>Email: {dentist.email}</p>\r\n      <p>Teléfono: {dentist.phone}</p>\r\n      <p>Website: {dentist.website}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detail"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAEnB;EAIA,MAAM;IAAEC;EAAF,IAASJ,SAAS,EAAxB;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC,CARmB,CAQ2B;;EAC9C,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CATmB,CASuB;;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,YAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CT,EAAG,EAAlD,CAA5B;;QAEA,IAAI,CAACQ,QAAQ,CAACE,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAW,UAASH,QAAQ,CAACI,MAAO,IAAGJ,QAAQ,CAACK,UAAW,EAA3D,CAAN;QACD;;QAED,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;QACAb,UAAU,CAACY,IAAD,CAAV;MACD,CATD,CASE,OAAOT,KAAP,EAAc;QACdC,QAAQ,CAACD,KAAK,CAACW,OAAP,CAAR;MACD,CAXD,SAWU;QACRZ,UAAU,CAAC,KAAD,CAAV;MACD;IACF,CAfD;;IAiBAG,YAAY;EACb,CAnBQ,EAmBN,CAACP,EAAD,CAnBM,CAAT;EAqBAiB,OAAO,CAACC,GAAR,CAAYlB,EAAZ;EAEA,IAAIG,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb,IAAIE,KAAJ,EAAW,oBAAO;IAAA,sBAAWA,KAAX;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACX,IAAI,CAACJ,OAAL,EAAc,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAEd,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKA,OAAO,CAACkB;IAAb;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,sBAAWlB,OAAO,CAACmB,KAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,4BAAcnB,OAAO,CAACoB,KAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,wBAAapB,OAAO,CAACqB,OAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA/CD;;GAAMvB,M;UAMWH,S;;;KANXG,M;AAiDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}